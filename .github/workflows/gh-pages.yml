# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # node setup
      - name: setup nodes
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      # using chache to npm install
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm キャッシュファイルは Linux/macOS の「~/.npm」に保存される
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      # package install
      - name: npm package install
        run: npm install --frozen-lockfile
      
      # next build
      - name: building next app
        run: npm run build
      
      # next export 
      - name: export next app
        run: npm run export
        
      - name: add nojekyll
        run: touch ./out/.nojekyll

      # gh-pagesブランチにoutディレクトリの中身をプッシュする
      # gh-pagesブランチは自動的に作成される
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          
      # aws setup
      - name: set up to aws credentials
        if: "contains(github.event.head_commit.message, '[s3]')"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ap-northeast-1
      # up to s3
      - name: s3 up
        if: "contains(github.event.head_commit.message, '[s3]')"
        working-directory: dist
        run: aws s3 sync . s3://wwwgit
